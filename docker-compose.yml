version: '3.8'
services:
  api:
    build: .
    ports:
      - "5000:5000"
    environment:
      - DB_DATASOURCE=jdbc:postgresql://db:5432/jobkeepdb
      - DB_USERNAME=dev
      - DB_PASSWORD=development
      - JWT_KEY=JVHABSJHDDHBJjhcswhdfiya47ufhsdjbhbdjfbabhBGFSKDJBG8Hbgfdsyuhgo87weygufdshjbvfjhbgseiugw78e4y7t89hgersbgsjfhdbyhcbguyfhguifsyhg738yrt87giudhgjsfdg78ey579ty3985yygeuyihgvfdshbghfuhvhbvyush87ges8rtgy8euyhbguy8s7ehguyidfhgyuisdfh87gey8t7serygfdgjhdbfgbdfuig8s7eyt93785938tyuurhegistu354hty354hi34htrhb34hgtr4ui3htruhg35b4tuy35htihubw3ug4t5ru345gbtug354vtu3ebtu3h5wgbtu345gbtuy53gtuh3bwu5g835htge8rythg8e75syt8yuh85tetgfer
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=jobkeepdb
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=development
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U dev -d jobkeepdb" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network: